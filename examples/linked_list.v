
From Coq          Require Import Lists.List.
From Coq          Require Import String.
From Coq          Require Import Vectors.Vector.
From CryptolToCoq Require Import SAWCoreScaffolding.
From CryptolToCoq Require Import SAWCoreVectorsAsCoqVectors.
From Records      Require Import Records.

From CryptolToCoq Require Import SAWCorePrelude.

Import ListNotations.

Module linked_list.

Definition mallocSpec : forall (sz : ((@SAWCorePrelude.bitvector) (64))), ((CompM) (((@SAWCorePrelude.BVVec) (64) (sz) (unit)))) :=
  (fun (sz : ((@SAWCoreVectorsAsCoqVectors.Vec) (64) (((@SAWCoreScaffolding.Bool))))) => ((((@returnM) (CompM) (_))) (((@SAWCorePrelude.BVVec) (64) (sz) (unit))) (((@SAWCorePrelude.genBVVec) (64) (sz) (unit) ((fun (_ : ((@SAWCoreVectorsAsCoqVectors.Vec) (64) (((@SAWCoreScaffolding.Bool))))) => tt)))))).

Definition malloc : forall (e0 : ((@SAWCorePrelude.bitvector) (64))), ((CompM) (((@SAWCorePrelude.BVVec) (64) (e0) (unit)))) :=
  ((@mallocSpec)).

Definition sorted_insert__tuple_fun : ((@CompM.lrtTupleType) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Ret) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))))))))) (((@CompM.LRT_Nil)))))) :=
  ((@CompM.multiFixM) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Ret) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))))))))) (((@CompM.LRT_Nil))))) ((fun (sorted_insert : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Ret) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))))))))))) => ((pair) ((fun (e0 : ((@SAWCorePrelude.bitvector) (64))) (p0 : ((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.letRecM) (((@CompM.LRT_Nil))) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (tt) (((@SAWCorePrelude.either) (unit) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (((prod) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (unit))))) (((CompM) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) ((fun (x_left0 : unit) => ((((@bindM) (CompM) (_))) (((@SAWCorePrelude.BVVec) (64) (((@SAWCoreVectorsAsCoqVectors.bvNat) (64) (2))) (unit))) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((@malloc) (((@SAWCoreVectorsAsCoqVectors.bvNat) (64) (2))))) ((fun (call_ret_val : ((@SAWCorePrelude.BVVec) (64) (((@SAWCoreVectorsAsCoqVectors.bvNat) (64) (2))) (unit))) => ((@SAWCorePrelude.maybe) (((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreScaffolding.true))) (((@SAWCoreScaffolding.true))))) (((CompM) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((((@errorM) (CompM) (_))) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) ((fun (inrange_pf0 : ((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreScaffolding.true))) (((@SAWCoreScaffolding.true))))) => ((@SAWCorePrelude.maybe) (((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreScaffolding.true))) (((@SAWCoreScaffolding.true))))) (((CompM) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((((@errorM) (CompM) (_))) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) ((fun (inrange_pf0 : ((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreScaffolding.true))) (((@SAWCoreScaffolding.true))))) => if ((@SAWCoreScaffolding.false)) then ((((@errorM) (CompM) (_))) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit))))))) else (((fun (catchpoint : ((CompM) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) => catchpoint)) ((((fun (catchpoint : ((CompM) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) => ((((@returnM) (CompM) (_))) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((@SAWCorePrelude.foldList) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (((@SAWCorePrelude.Right) (unit) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (((prod) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (unit))))) (((pair) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (e0) (tt))) (((pair) (((@SAWCorePrelude.foldList) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (((@SAWCorePrelude.Left) (unit) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (((prod) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (unit))))) (tt))))) (tt)))))))))))) (((((@errorM) (CompM) (_))) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit))))))))))))) (((@SAWCorePrelude.bvultWithProof) (64) (((@SAWCoreVectorsAsCoqVectors.bvNat) (64) (1))) (((@SAWCoreVectorsAsCoqVectors.bvNat) (64) (2)))))))) (((@SAWCorePrelude.bvultWithProof) (64) (((@SAWCoreVectorsAsCoqVectors.bvNat) (64) (0))) (((@SAWCoreVectorsAsCoqVectors.bvNat) (64) (2))))))))))) ((fun (x_right0 : ((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (((prod) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (unit))))) => if ((@SAWCoreScaffolding.not) (((@SAWCorePrelude.bvEq) (1) (if ((@SAWCoreVectorsAsCoqVectors.bvsle) (64) (e0) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((SAWCoreScaffolding.fst) (x_right0)))))) then ((@SAWCoreVectorsAsCoqVectors.bvNat) (1) (1)) else ((@SAWCoreVectorsAsCoqVectors.bvNat) (1) (0))) (((@SAWCoreVectorsAsCoqVectors.bvNat) (1) (0)))))) then ((((@bindM) (CompM) (_))) (((@SAWCorePrelude.BVVec) (64) (((@SAWCoreVectorsAsCoqVectors.bvNat) (64) (2))) (unit))) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((@malloc) (((@SAWCoreVectorsAsCoqVectors.bvNat) (64) (2))))) ((fun (call_ret_val : ((@SAWCorePrelude.BVVec) (64) (((@SAWCoreVectorsAsCoqVectors.bvNat) (64) (2))) (unit))) => ((@SAWCorePrelude.maybe) (((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreScaffolding.true))) (((@SAWCoreScaffolding.true))))) (((CompM) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((((@errorM) (CompM) (_))) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) ((fun (inrange_pf0 : ((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreScaffolding.true))) (((@SAWCoreScaffolding.true))))) => ((@SAWCorePrelude.maybe) (((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreScaffolding.true))) (((@SAWCoreScaffolding.true))))) (((CompM) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((((@errorM) (CompM) (_))) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) ((fun (inrange_pf0 : ((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreScaffolding.true))) (((@SAWCoreScaffolding.true))))) => if ((@SAWCoreScaffolding.false)) then ((((@errorM) (CompM) (_))) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit))))))) else (((fun (catchpoint : ((CompM) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) => catchpoint)) ((((fun (catchpoint : ((CompM) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) => catchpoint)) (((((@returnM) (CompM) (_))) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((@SAWCorePrelude.foldList) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (((@SAWCorePrelude.Right) (unit) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (((prod) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (unit))))) (((pair) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (e0) (tt))) (((pair) (((@SAWCorePrelude.foldList) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (((@SAWCorePrelude.Right) (unit) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (((prod) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (unit))))) (((pair) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((SAWCoreScaffolding.fst) (x_right0))))) (tt))) (((pair) (((SAWCoreScaffolding.fst) (((SAWCoreScaffolding.snd) (x_right0))))) (tt))))))))) (tt)))))))))))))))) (((@SAWCorePrelude.bvultWithProof) (64) (((@SAWCoreVectorsAsCoqVectors.bvNat) (64) (1))) (((@SAWCoreVectorsAsCoqVectors.bvNat) (64) (2)))))))) (((@SAWCorePrelude.bvultWithProof) (64) (((@SAWCoreVectorsAsCoqVectors.bvNat) (64) (0))) (((@SAWCoreVectorsAsCoqVectors.bvNat) (64) (2))))))))) else ((((@bindM) (CompM) (_))) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((sorted_insert) (e0) (((SAWCoreScaffolding.fst) (((SAWCoreScaffolding.snd) (x_right0))))))) ((fun (call_ret_val : ((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => (((fun (catchpoint : ((CompM) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) => catchpoint)) (((((@returnM) (CompM) (_))) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((@SAWCorePrelude.foldList) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (((@SAWCorePrelude.Right) (unit) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (((prod) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (unit))))) (((pair) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((SAWCoreScaffolding.fst) (x_right0))))) (tt))) (((pair) (call_ret_val) (tt))))))))))))))))) (((@SAWCorePrelude.unfoldList) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (p0)))))))) (tt))))).

Definition sorted_insert : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Ret) (((@Datatypes.list) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit))))))))))))))) :=
  ((SAWCoreScaffolding.fst) (((@sorted_insert__tuple_fun)))).

End linked_list.
