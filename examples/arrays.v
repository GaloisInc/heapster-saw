
From Coq          Require Import Lists.List.
From Coq          Require Import String.
From Coq          Require Import Vectors.Vector.
From CryptolToCoq Require Import SAWCoreScaffolding.
From CryptolToCoq Require Import SAWCoreVectorsAsCoqVectors.

From CryptolToCoq Require Import SAWCorePrelude.

Import ListNotations.

Module arrays.

Definition contains0_rec___tuple_fun : ((@CompM.lrtTupleType) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (perm1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit)))))))))))))))) (((@CompM.LRT_Nil)))))) :=
  ((@CompM.multiFixM) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (perm1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit)))))))))))))))) (((@CompM.LRT_Nil))))) ((fun (contains0_rec_ : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (perm1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit)))))))))))))))))) => ((pair) ((fun (e0 : ((@SAWCorePrelude.bitvector) (64))) (p0 : ((@SAWCorePrelude.BVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.letRecM) (((@CompM.LRT_Nil))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (tt) (if ((@SAWCoreScaffolding.not) (((@SAWCorePrelude.bvEq) (1) (if ((@SAWCoreVectorsAsCoqVectors.bvule) (64) (e0) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1)))) then ((intToBv) (1) ((-1)%Z)) else ((intToBv) (1) (0%Z))) (((intToBv) (1) (0%Z)))))) then ((((@returnM) (CompM) (_))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (((pair) (p0) (((pair) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((intToBv) (64) (0%Z))) (tt))) (tt)))))) else if ((@SAWCoreScaffolding.and) (((@SAWCoreVectorsAsCoqVectors.bvsle) (64) (((intToBv) (64) (0xf000000000000000%Z))) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))))) (((@SAWCoreVectorsAsCoqVectors.bvsle) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (((intToBv) (64) (0xfffffffffffffff%Z)))))) then ((@SAWCorePrelude.maybe) (((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreVectorsAsCoqVectors.bvult) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (e0))) (((@SAWCoreScaffolding.true))))) (((CompM) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))))) (((((@errorM) (CompM) (_))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (("1*ghost10+0 <u top1")%string))) ((fun (ult_pf0 : ((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreVectorsAsCoqVectors.bvult) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (e0))) (((@SAWCoreScaffolding.true))))) => if ((@SAWCoreScaffolding.not) (((@SAWCorePrelude.bvEq) (1) (if ((@SAWCorePrelude.bvEq) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@SAWCorePrelude.atBVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (p0) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (ult_pf0))))) (((intToBv) (64) (0%Z)))) then ((intToBv) (1) ((-1)%Z)) else ((intToBv) (1) (0%Z))) (((intToBv) (1) (0%Z)))))) then ((((@returnM) (CompM) (_))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (((pair) (((@SAWCorePrelude.adjustBVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (p0) ((fun (fld0 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@SAWCorePrelude.atBVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (p0) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (ult_pf0))))) (tt)))) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))))) (((pair) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((intToBv) (64) (1%Z))) (tt))) (tt)))))) else ((((@bindM) (CompM) (_))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (((contains0_rec_) (e0) (((@SAWCorePrelude.adjustBVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (p0) ((fun (fld0 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@SAWCorePrelude.atBVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (p0) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (ult_pf0))))) (tt)))) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))))) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@SAWCoreVectorsAsCoqVectors.bvAdd) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (((intToBv) (64) (1%Z))))) (tt))))) ((fun (call_ret_val : ((prod) (((@SAWCorePrelude.BVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) => ((((@returnM) (CompM) (_))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (((pair) (((SAWCoreScaffolding.fst) (call_ret_val))) (((pair) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((SAWCoreScaffolding.fst) (((SAWCoreScaffolding.snd) (call_ret_val))))))) (tt))) (tt))))))))))) (((@SAWCorePrelude.bvultWithProof) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (e0)))) else ((((@errorM) (CompM) (_))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (("Failed Assert at arrays.c:19:14")%string)))))) (tt))))).

Definition contains0_rec_ : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (perm1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))))))))))))))) :=
  ((SAWCoreScaffolding.fst) (((@contains0_rec___tuple_fun)))).

Definition contains0__tuple_fun : ((@CompM.lrtTupleType) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))))))))))) (((@CompM.LRT_Nil)))))) :=
  ((@CompM.multiFixM) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))))))))))) (((@CompM.LRT_Nil))))) ((fun (contains0 : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))))))))))))) => ((pair) ((fun (e0 : ((@SAWCorePrelude.bitvector) (64))) (p0 : ((@SAWCorePrelude.BVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.letRecM) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit)))))))))))))))) (((@CompM.LRT_Nil))))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) ((fun (f : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit)))))))))))))))))) => ((pair) ((fun (e0_0 : ((@SAWCorePrelude.bitvector) (64))) (p0_0 : ((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => if ((@SAWCoreScaffolding.not) (((@SAWCorePrelude.bvEq) (1) (if ((@SAWCoreVectorsAsCoqVectors.bvult) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (e0_0)) then ((intToBv) (1) ((-1)%Z)) else ((intToBv) (1) (0%Z))) (((intToBv) (1) (0%Z)))))) then if ((@SAWCoreScaffolding.and) (((@SAWCoreVectorsAsCoqVectors.bvsle) (64) (((intToBv) (64) (0xf000000000000000%Z))) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))))) (((@SAWCoreVectorsAsCoqVectors.bvsle) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))) (((intToBv) (64) (0xfffffffffffffff%Z)))))) then ((@SAWCorePrelude.maybe) (((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreVectorsAsCoqVectors.bvult) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))) (e0_0))) (((@SAWCoreScaffolding.true))))) (((CompM) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))))) (((((@errorM) (CompM) (_))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (("1*z15+0 <u top1")%string))) ((fun (ult_pf0 : ((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreVectorsAsCoqVectors.bvult) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))) (e0_0))) (((@SAWCoreScaffolding.true))))) => if ((@SAWCoreScaffolding.not) (((@SAWCorePrelude.bvEq) (1) (if ((@SAWCorePrelude.bvEq) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@SAWCorePrelude.atBVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (p0_0) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))) (ult_pf0))))) (((intToBv) (64) (0%Z)))) then ((intToBv) (1) ((-1)%Z)) else ((intToBv) (1) (0%Z))) (((intToBv) (1) (0%Z)))))) then ((((@returnM) (CompM) (_))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (((pair) (((@SAWCorePrelude.adjustBVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (p0_0) ((fun (fld0 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@SAWCorePrelude.atBVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (p0_0) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))) (ult_pf0))))) (tt))))) (tt)))) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))))) (((pair) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((intToBv) (64) (1%Z))) (tt))))) (tt))) (tt)))))) else ((f) (e0_0) (((@SAWCorePrelude.adjustBVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (p0_0) ((fun (fld0 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@SAWCorePrelude.atBVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (p0_0) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))) (ult_pf0))))) (tt))))) (tt)))) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))))) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@SAWCoreVectorsAsCoqVectors.bvAdd) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))) (((intToBv) (64) (1%Z))))) (tt))))) (tt)))))) (((@SAWCorePrelude.bvultWithProof) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))) (e0_0)))) else ((((@errorM) (CompM) (_))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (("Failed Assert at arrays.c:29:9")%string)) else ((((@returnM) (CompM) (_))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (((pair) (p0_0) (((pair) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((intToBv) (64) (0%Z))) (tt))))) (tt))) (tt)))))))) (tt)))) ((fun (f : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit)))))))))))))))))) => ((f) (e0) (p0) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((intToBv) (64) (0%Z))) (tt))))))))) (tt))))).

Definition contains0 : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit)))))))))))))) :=
  ((SAWCoreScaffolding.fst) (((@contains0__tuple_fun)))).

Definition zero_array__tuple_fun : ((@CompM.lrtTupleType) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Ret) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))))))))) (((@CompM.LRT_Nil)))))) :=
  ((@CompM.multiFixM) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Ret) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))))))))) (((@CompM.LRT_Nil))))) ((fun (zero_array : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Ret) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))))))))))) => ((pair) ((fun (e0 : ((@SAWCorePrelude.bitvector) (64))) (p0 : ((@SAWCorePrelude.BVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.letRecM) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Ret) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit))))))))))))))))) (((@CompM.LRT_Nil))))) (((@SAWCorePrelude.BVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (f : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Ret) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit))))))))))))))))))) => ((pair) ((fun (e0_0 : ((@SAWCorePrelude.bitvector) (64))) (p0_0 : ((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => if ((@SAWCoreScaffolding.not) (((@SAWCorePrelude.bvEq) (1) (if ((@SAWCoreVectorsAsCoqVectors.bvult) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (e0_0)) then ((intToBv) (1) ((-1)%Z)) else ((intToBv) (1) (0%Z))) (((intToBv) (1) (0%Z)))))) then if ((@SAWCoreScaffolding.and) (((@SAWCoreVectorsAsCoqVectors.bvsle) (64) (((intToBv) (64) (0xf000000000000000%Z))) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))))) (((@SAWCoreVectorsAsCoqVectors.bvsle) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))) (((intToBv) (64) (0xfffffffffffffff%Z)))))) then ((@SAWCorePrelude.maybe) (((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreVectorsAsCoqVectors.bvult) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))) (e0_0))) (((@SAWCoreScaffolding.true))))) (((CompM) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((((@errorM) (CompM) (_))) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (("1*z13+0 <u top1")%string))) ((fun (ult_pf0 : ((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreVectorsAsCoqVectors.bvult) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))) (e0_0))) (((@SAWCoreScaffolding.true))))) => ((f) (e0_0) (((@SAWCorePrelude.adjustBVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (p0_0) ((fun (fld0 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((intToBv) (64) (0%Z))) (tt))))) (tt)))) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))))) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@SAWCoreVectorsAsCoqVectors.bvAdd) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))) (((intToBv) (64) (1%Z))))) (tt))))) (tt)))))) (((@SAWCorePrelude.bvultWithProof) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))) (e0_0)))) else ((((@errorM) (CompM) (_))) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (("Failed Assert at arrays.c:61:5")%string)) else ((((@returnM) (CompM) (_))) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (p0_0)))) (tt)))) ((fun (f : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Ret) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit))))))))))))))))))) => ((f) (e0) (p0) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((intToBv) (64) (0%Z))) (tt))))))))) (tt))))).

Definition zero_array : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Ret) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit))))))))))))))) :=
  ((SAWCoreScaffolding.fst) (((@zero_array__tuple_fun)))).

Definition zero_array_from__tuple_fun : ((@CompM.lrtTupleType) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg1 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Ret) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit))))))))))))))))) (((@CompM.LRT_Nil)))))) :=
  ((@CompM.multiFixM) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg1 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Ret) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit))))))))))))))))) (((@CompM.LRT_Nil))))) ((fun (zero_array_from : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg1 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Ret) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit))))))))))))))))))) => ((pair) ((fun (e0 : ((@SAWCorePrelude.bitvector) (64))) (e1 : ((@SAWCorePrelude.bitvector) (64))) (p0 : ((@SAWCorePrelude.BVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.letRecM) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg1 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Ret) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))))))))))))))) (((@CompM.LRT_Nil))))) (((@SAWCorePrelude.BVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (f : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg1 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Ret) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))))))))))))))))) => ((pair) ((fun (e0_0 : ((@SAWCorePrelude.bitvector) (64))) (e1_0 : ((@SAWCorePrelude.bitvector) (64))) (p0_0 : ((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => if ((@SAWCoreScaffolding.not) (((@SAWCorePrelude.bvEq) (1) (if ((@SAWCoreVectorsAsCoqVectors.bvult) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (e0_0)) then ((intToBv) (1) ((-1)%Z)) else ((intToBv) (1) (0%Z))) (((intToBv) (1) (0%Z)))))) then if ((@SAWCoreScaffolding.and) (((@SAWCoreVectorsAsCoqVectors.bvsle) (64) (((intToBv) (64) (0xf000000000000000%Z))) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))))) (((@SAWCoreVectorsAsCoqVectors.bvsle) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))) (((intToBv) (64) (0xfffffffffffffff%Z)))))) then ((@SAWCorePrelude.maybe) (((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreVectorsAsCoqVectors.bvult) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))) (e0_0))) (((@SAWCoreScaffolding.true))))) (((CompM) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((((@errorM) (CompM) (_))) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (("1*z15+0 <u top1")%string))) ((fun (ult_pf0 : ((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreVectorsAsCoqVectors.bvult) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))) (e0_0))) (((@SAWCoreScaffolding.true))))) => ((((@errorM) (CompM) (_))) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (("At arrays.c:67:3 (jump %9($0, $1, $2))
  Regs: $0 = local6, $1 = local7, $2 = local8
  Input perms: top1:true
               ,top2:true
               ,top3:array(0, <top1, *8, [(W,0) |->
                                            exists z17. eq(LLVMword z17)],
                           [(1*ghost14+0).0])
                     *ptr((W,8*ghost14+0) |-> eq(ghost15))
               ,top4:eq(LLVMword top1)
               ,top5:exists z17. eq(LLVMword z17)
               ,ghost10:llvmframe [local8:8,local7:8,local6:8]
               ,local6:ptr((W,0) |-> eq(ghost11))
               ,local7:ptr((W,0) |-> eq(ghost12))
               ,local8:ptr((W,0) |-> eq(local9))
               ,local9:exists z17. eq(LLVMword z17)
               ,ghost11:eq(top3)
               ,ghost12:eq(LLVMword top1)
               ,ghost14:true
               ,ghost15:exists z17. eq(LLVMword z17)
  Could not prove:  (z20,z19,z18,z17). top1:true
                                       ,top2:true
                                       ,top3:array(0, <top1, *8, [(W,0) |->
                                                                    exists z21. eq(LLVMword z21)],
                                                   [])
                                       ,top4:eq(LLVMword top1)
                                       ,top5:exists z21. eq(LLVMword z21)
                                       ,local6:ptr((W,0) |-> eq(z19))
                                       ,local7:ptr((W,0) |-> eq(z18))
                                       ,local8:ptr((W,0) |-> eq(z17))
                                       ,z20:llvmframe [local8:8,local7:8,local6:8]
                                       ,z19:eq(top3)
                                       ,z18:eq(top4)
                                       ,z17:eq(top5)
  
  proveVarEqH: Could not prove
  z18:true -o (z23,z22,z21,z20). eq(z19)")%string)))) (((@SAWCorePrelude.bvultWithProof) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))))) (e0_0)))) else ((((@errorM) (CompM) (_))) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (("Failed Assert at arrays.c:68:5")%string)) else ((((@returnM) (CompM) (_))) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (p0_0)))) (tt)))) ((fun (f : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg1 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Ret) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))))))))))))))))) => ((f) (e0) (e1) (p0) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (e1) (tt))))))))) (tt))))).

Definition zero_array_from : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg1 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Ret) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))))))))))))) :=
  ((SAWCoreScaffolding.fst) (((@zero_array_from__tuple_fun)))).

Definition filter_and_sum_pos__tuple_fun : ((@CompM.lrtTupleType) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))))))))))) (((@CompM.LRT_Nil)))))) :=
  ((@CompM.multiFixM) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))))))))))) (((@CompM.LRT_Nil))))) ((fun (filter_and_sum_pos : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))))))))))))) => ((pair) ((fun (e0 : ((@SAWCorePrelude.bitvector) (64))) (p0 : ((@SAWCorePrelude.BVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.letRecM) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg1 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p2 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit)))))))))))))))))))))) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p2 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))))))))))))))))) (((@CompM.LRT_Nil))))))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) ((fun (f : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg1 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p2 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit)))))))))))))))))))))))) (f_0 : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p2 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))))))))))))))))))) => ((pair) ((fun (e0_0 : ((@SAWCorePrelude.bitvector) (64))) (e1 : ((@SAWCorePrelude.bitvector) (64))) (p0_0 : ((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (p2 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => if ((@SAWCoreScaffolding.and) (((@SAWCoreVectorsAsCoqVectors.bvsle) (64) (((intToBv) (64) (0xf000000000000000%Z))) (e1))) (((@SAWCoreVectorsAsCoqVectors.bvsle) (64) (e1) (((intToBv) (64) (0xfffffffffffffff%Z)))))) then ((f_0) (e0_0) (((@SAWCorePrelude.adjustBVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (p0_0) ((fun (fld0 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p2))) (tt))))) (tt)))) (e1))) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@SAWCoreVectorsAsCoqVectors.bvAdd) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p2))))) (tt))))) (tt))) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@SAWCoreVectorsAsCoqVectors.bvAdd) (64) (e1) (((intToBv) (64) (1%Z))))) (tt))))) (tt)))) else ((((@errorM) (CompM) (_))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (("Failed Assert at arrays.c:80:12")%string)))) (((pair) ((fun (e0_0 : ((@SAWCorePrelude.bitvector) (64))) (p0_0 : ((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (p2 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => if ((@SAWCoreScaffolding.not) (((@SAWCorePrelude.bvEq) (1) (if ((@SAWCoreVectorsAsCoqVectors.bvult) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p2))) (e0_0)) then ((intToBv) (1) ((-1)%Z)) else ((intToBv) (1) (0%Z))) (((intToBv) (1) (0%Z)))))) then if ((@SAWCoreScaffolding.and) (((@SAWCoreVectorsAsCoqVectors.bvsle) (64) (((intToBv) (64) (0xf000000000000000%Z))) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p2))) (tt))))))) (((@SAWCoreVectorsAsCoqVectors.bvsle) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p2))) (tt))))) (((intToBv) (64) (0xfffffffffffffff%Z)))))) then ((@SAWCorePrelude.maybe) (((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreVectorsAsCoqVectors.bvult) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p2))) (tt))))) (e0_0))) (((@SAWCoreScaffolding.true))))) (((CompM) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))))) (((((@errorM) (CompM) (_))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (("1*z15+0 <u top1")%string))) ((fun (ult_pf0 : ((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreVectorsAsCoqVectors.bvult) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p2))) (tt))))) (e0_0))) (((@SAWCoreScaffolding.true))))) => if ((@SAWCoreScaffolding.not) (((@SAWCorePrelude.bvEq) (1) (if ((@SAWCoreVectorsAsCoqVectors.bvslt) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@SAWCorePrelude.atBVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (p0_0) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p2))) (tt))))) (ult_pf0))))) (((intToBv) (64) (0%Z)))) then ((intToBv) (1) ((-1)%Z)) else ((intToBv) (1) (0%Z))) (((intToBv) (1) (0%Z)))))) then if ((@SAWCoreScaffolding.and) (((@SAWCoreVectorsAsCoqVectors.bvsle) (64) (((intToBv) (64) (0xf000000000000000%Z))) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p2))) (tt))))))) (((@SAWCoreVectorsAsCoqVectors.bvsle) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p2))) (tt))))) (((intToBv) (64) (0xfffffffffffffff%Z)))))) then ((f) (e0_0) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p2))) (tt))))) (p0_0) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((intToBv) (64) (0%Z))) (tt)))) else ((((@errorM) (CompM) (_))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (("Failed Assert at arrays.c:78:7")%string)) else ((f) (e0_0) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p2))) (tt))))) (p0_0) (p1) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@SAWCorePrelude.atBVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (p0_0) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p2))) (tt))))) (ult_pf0))))) (tt)))))) (((@SAWCorePrelude.bvultWithProof) (64) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p2))) (tt))))) (e0_0)))) else ((((@errorM) (CompM) (_))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (("Failed Assert at arrays.c:77:9")%string)) else ((((@returnM) (CompM) (_))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (((pair) (p0_0) (((pair) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((@projT1) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_elimEx0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (p1))) (tt))) (tt)))))))) (tt)))))) ((fun (f : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg1 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p2 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit)))))))))))))))))))))))) (f_0 : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p1 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Fun) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) ((fun (p2 : ((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))))))))))))))))))) => ((f_0) (e0) (p0) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((intToBv) (64) (0%Z))) (tt))) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((intToBv) (64) (0%Z))) (tt))))))))) (tt))))).

Definition filter_and_sum_pos : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit)))))))))))))) :=
  ((SAWCoreScaffolding.fst) (((@filter_and_sum_pos__tuple_fun)))).

Definition sum_2d__tuple_fun : ((@CompM.lrtTupleType) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg1 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit)))))))))))))))) (((@CompM.LRT_Nil)))))) :=
  ((@CompM.multiFixM) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg1 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit)))))))))))))))) (((@CompM.LRT_Nil))))) ((fun (sum_2d : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg1 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit)))))))))))))))))) => ((pair) ((fun (e0 : ((@SAWCorePrelude.bitvector) (64))) (e1 : ((@SAWCorePrelude.bitvector) (64))) (p0 : ((@SAWCorePrelude.BVVec) (64) (e0) (((@SAWCorePrelude.BVVec) (64) (e1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) => ((@CompM.letRecM) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg1 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit)))))))))))))))) (((@CompM.LRT_Cons) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg1 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit)))))))))))))))) (((@CompM.LRT_Nil))))))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0) (((@SAWCorePrelude.BVVec) (64) (e1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) ((fun (f : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg1 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit)))))))))))))))))) (f_0 : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg1 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit)))))))))))))))))) => ((pair) ((fun (e0_0 : ((@SAWCorePrelude.bitvector) (64))) (e1_0 : ((@SAWCorePrelude.bitvector) (64))) (p0_0 : ((@SAWCorePrelude.BVVec) (64) (e0_0) (((@SAWCorePrelude.BVVec) (64) (e1_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) => if ((@SAWCoreScaffolding.not) (((@SAWCorePrelude.bvEq) (1) (if ((@SAWCoreVectorsAsCoqVectors.bvult) (64) (((intToBv) (64) (0%Z))) (e1_0)) then ((intToBv) (1) ((-1)%Z)) else ((intToBv) (1) (0%Z))) (((intToBv) (1) (0%Z)))))) then ((@SAWCorePrelude.maybe) (((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreVectorsAsCoqVectors.bvult) (64) (((intToBv) (64) (0%Z))) (e0_0))) (((@SAWCoreScaffolding.true))))) (((CompM) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@SAWCorePrelude.BVVec) (64) (e1_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))))) (((((@errorM) (CompM) (_))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@SAWCorePrelude.BVVec) (64) (e1_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (("0 <u top1")%string))) ((fun (ult_pf0 : ((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreVectorsAsCoqVectors.bvult) (64) (((intToBv) (64) (0%Z))) (e0_0))) (((@SAWCoreScaffolding.true))))) => ((@SAWCorePrelude.maybe) (((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreVectorsAsCoqVectors.bvult) (64) (((intToBv) (64) (0%Z))) (e1_0))) (((@SAWCoreScaffolding.true))))) (((CompM) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@SAWCorePrelude.BVVec) (64) (e1_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))))) (((((@errorM) (CompM) (_))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@SAWCorePrelude.BVVec) (64) (e1_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (("0 <u top2")%string))) ((fun (ult_pf0_0 : ((@SAWCoreScaffolding.EqP) (((@SAWCoreScaffolding.Bool))) (((@SAWCoreVectorsAsCoqVectors.bvult) (64) (((intToBv) (64) (0%Z))) (e1_0))) (((@SAWCoreScaffolding.true))))) => ((((@errorM) (CompM) (_))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@SAWCorePrelude.BVVec) (64) (e1_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (("At arrays.c:88:5 (jump %22($0, $1, $2, $3, $4, $5))
  Regs: $0 = local6, $1 = local7, $2 = local8, $3 = local9,
  $4 = local10, $5 = local11
  Input perms: top1:true
               ,top2:true
               ,top3:array(0, <top1, *8, [(W,0) |-> array(0, <top2, *8,
                                                          [(W,0) |->
                                                             exists z27. eq(LLVMword z27)],
                                                          [])], [(0).0])
                     *ptr((W,0) |-> eq(ghost14))
               ,top4:eq(LLVMword top1)
               ,top5:eq(LLVMword top2)
               ,ghost13:llvmframe [local11:8
                                  ,local10:8
                                  ,local9:8
                                  ,local8:8
                                  ,local7:8
                                  ,local6:8]
               ,local6:ptr((W,0) |-> eq(ghost18))
               ,local7:ptr((W,0) |-> eq(ghost19))
               ,local8:ptr((W,0) |-> eq(ghost20))
               ,local9:ptr((W,0) |-> eq(ghost21))
               ,local10:ptr((W,0) |-> eq(ghost23))
               ,local11:ptr((W,0) |-> eq(local12))
               ,local12:eq(LLVMword ghost25)
               ,ghost14:eq(ghost15)
               ,ghost18:eq(top3)
               ,ghost19:eq(LLVMword top1)
               ,ghost20:eq(LLVMword top2)
               ,ghost21:eq(LLVMword ghost22)
               ,ghost23:eq(LLVMword 0)
               ,ghost15:array(0, <top2, *8, [(W,0) |->
                                               exists z27. eq(LLVMword z27)],
                              [(0).0])
                        *ptr((W,0) |-> eq(ghost16))
               ,ghost22:eq(1*ghost17+0)
               ,ghost25:eq(1)
               ,ghost16:eq(LLVMword ghost17)
               ,ghost17:true
  Could not prove:  (z31,z30,z29,z28,z27). top1:true
                                           ,top2:true
                                           ,top3:array(0, <top1, *8, [(W,0) |->
                                                                        array(0,
                                                                              <top2,
                                                                              *8,
                                                                              [(W,0) |->
                                                                                 exists z32. eq(LLVMword z32)],
                                                                              [])],
                                                       [])
                                           ,top4:eq(LLVMword top1)
                                           ,top5:eq(LLVMword top2)
                                           ,local6:ptr((W,0) |-> eq(z30))
                                           ,local7:ptr((W,0) |-> eq(z29))
                                           ,local8:ptr((W,0) |-> eq(z28))
                                           ,local9:ptr((W,0) |-> eq(LLVMword 0))
                                           ,local10:ptr((W,0) |-> eq(z27))
                                           ,local11:ptr((W,0) |-> eq(LLVMword 0))
                                           ,z31:llvmframe [local11:8
                                                          ,local10:8
                                                          ,local9:8
                                                          ,local8:8
                                                          ,local7:8
                                                          ,local6:8]
                                           ,z30:eq(top3)
                                           ,z29:eq(LLVMword top1)
                                           ,z28:eq(top5)
                                           ,z27:eq(LLVMword 0)
  
  proveVarEqH: Could not prove
  ghost22:eq(1*ghost17+0) -o (z31,z30,z29,z28,z27). eq(0)")%string)))) (((@SAWCorePrelude.bvultWithProof) (64) (((intToBv) (64) (0%Z))) (e1_0)))))) (((@SAWCorePrelude.bvultWithProof) (64) (((intToBv) (64) (0%Z))) (e0_0)))) else ((((@errorM) (CompM) (_))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@SAWCorePrelude.BVVec) (64) (e1_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (("At arrays.c:87:3 (jump %9($0, $1, $2, $3, $4, $5))
  Regs: $0 = local6, $1 = local7, $2 = local8, $3 = local9,
  $4 = local10, $5 = local11
  Input perms: top1:true
               ,top2:true
               ,top3:array(0, <top1, *8, [(W,0) |-> array(0, <top2, *8,
                                                          [(W,0) |->
                                                             exists z21. eq(LLVMword z21)],
                                                          [])], [])
               ,top4:eq(LLVMword top1)
               ,top5:eq(LLVMword top2)
               ,ghost13:llvmframe [local11:8
                                  ,local10:8
                                  ,local9:8
                                  ,local8:8
                                  ,local7:8
                                  ,local6:8]
               ,local6:ptr((W,0) |-> eq(ghost14))
               ,local7:ptr((W,0) |-> eq(ghost15))
               ,local8:ptr((W,0) |-> eq(ghost16))
               ,local9:ptr((W,0) |-> eq(LLVMword 0))
               ,local10:ptr((W,0) |-> eq(local12))
               ,local11:ptr((W,0) |-> eq(ghost18))
               ,local12:eq(LLVMword ghost19)
               ,ghost14:eq(top3)
               ,ghost15:eq(LLVMword top1)
               ,ghost16:eq(LLVMword top2)
               ,ghost18:eq(LLVMword 0)
               ,ghost19:eq(1)
  Could not prove:  (z24,z23,z22,z21). top1:true
                                       ,top2:true
                                       ,top3:array(0, <top1, *8, [(W,0) |->
                                                                    array(0,
                                                                          <top2,
                                                                          *8,
                                                                          [(W,0) |->
                                                                             exists z25. eq(LLVMword z25)],
                                                                          [])],
                                                   [])
                                       ,top4:eq(LLVMword top1)
                                       ,top5:eq(LLVMword top2)
                                       ,local6:ptr((W,0) |-> eq(z23))
                                       ,local7:ptr((W,0) |-> eq(z22))
                                       ,local8:ptr((W,0) |-> eq(z21))
                                       ,local9:ptr((W,0) |-> eq(LLVMword 0))
                                       ,local10:ptr((W,0) |-> eq(LLVMword 0))
                                       ,local11:ptr((W,0) |-> true)
                                       ,z24:llvmframe [local11:8
                                                      ,local10:8
                                                      ,local9:8
                                                      ,local8:8
                                                      ,local7:8
                                                      ,local6:8]
                                       ,z23:eq(top3)
                                       ,z22:eq(top4)
                                       ,z21:eq(top5)
  
  proveVarEqH: Could not prove
  ghost19:eq(1) -o (z25,z24,z23,z22). eq(0)")%string)))) (((pair) ((fun (e0_0 : ((@SAWCorePrelude.bitvector) (64))) (e1_0 : ((@SAWCorePrelude.bitvector) (64))) (p0_0 : ((@SAWCorePrelude.BVVec) (64) (e0_0) (((@SAWCorePrelude.BVVec) (64) (e1_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) => if ((@SAWCoreScaffolding.not) (((@SAWCorePrelude.bvEq) (1) (if ((@SAWCoreVectorsAsCoqVectors.bvult) (64) (((intToBv) (64) (0%Z))) (e0_0)) then ((intToBv) (1) ((-1)%Z)) else ((intToBv) (1) (0%Z))) (((intToBv) (1) (0%Z)))))) then ((f) (e0_0) (e1_0) (p0_0)) else ((((@returnM) (CompM) (_))) (((prod) (((@SAWCorePrelude.BVVec) (64) (e0_0) (((@SAWCorePrelude.BVVec) (64) (e1_0) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))) (((pair) (p0_0) (((pair) (((@existT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)) (((intToBv) (64) (0%Z))) (tt))) (tt)))))))) (tt)))))) ((fun (f : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg1 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit)))))))))))))))))) (f_0 : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg1 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) ((fun (p0_0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit)))))))))))))))))) => ((f_0) (e0) (e1) (p0))))))) (tt))))).

Definition sum_2d : ((@CompM.lrtToType) (((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg0 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.bitvector) (64))) ((fun (arg1 : ((@SAWCorePrelude.bitvector) (64))) => ((@CompM.LRT_Fun) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) ((fun (perm0 : ((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) => ((@CompM.LRT_Ret) (((prod) (((@SAWCorePrelude.BVVec) (64) (arg0) (((@SAWCorePrelude.BVVec) (64) (arg1) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))))))) (((prod) (((@sigT) (((@SAWCorePrelude.bitvector) (64))) ((fun (x_ex0 : ((@SAWCorePrelude.bitvector) (64))) => unit)))) (unit))))))))))))))))) :=
  ((SAWCoreScaffolding.fst) (((@sum_2d__tuple_fun)))).

End arrays.
