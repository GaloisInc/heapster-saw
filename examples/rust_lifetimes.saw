enable_experimental;
env <- heapster_init_env_from_file "rust_lifetimes.sawcore" "rust_lifetimes.bc";

/***
 *** Types
 ***/

// Integer perms
heapster_define_perm env "int64" " " "llvmptr 64" "exists x:bv 64.eq(llvmword(x))";
heapster_define_perm env "int8" " " "llvmptr 8" "exists x:bv 8.eq(llvmword(x))";
heapster_define_perm env "int1" " " "llvmptr 1" "exists x:bv 1.eq(llvmword(x))";

// Integer shapes
heapster_define_llvmshape env "u64" 64 "" "fieldsh(int64<>)";


/***
 *** Type-Checked Functions
 ***/

// test_result
mux_mut_refs_u64_sym <- heapster_find_symbol env "16mux_mut_refs_u64";
heapster_typecheck_fun_rename env mux_mut_refs_u64_sym "mux_mut_refs_u64" "(l:lifetime,ps:lowned_perm).l:lowned ps, arg0:[l]memblock(W,0,8,u64<>), arg1:[l]memblock(W,0,8,u64<>), arg2:int1<> -o ret:[l]memblock(W,0,8,u64<>)";


/***
 *** Export to Coq
 ***/

heapster_export_coq env "rust_lifetimes.v";
