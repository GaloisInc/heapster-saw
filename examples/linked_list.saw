// This script expects to be run from the saw-script root directory
enable_experimental;
env <- heapster_init_env_from_file "linked_list.sawcore" "linked_list.bc";

// heapster_typecheck_fun env "is_elem" "(x:bv 64).arg0:eq(llvmword(x)), arg1:list64<always,R> -o arg0:true, arg1:true, ret:exists x:(bv 64).eq(llvmword(x))";

//heapster_typecheck_fun env "is_elem" "(x:bv 64).arg0:eq(llvmword(x)), arg1:List<(exists y:(bv 64).eq(llvmword(y))),always,R> -o arg0:true, arg1:true, ret:exists z:(bv 64).eq(llvmword(z))";

heapster_assume_fun env "malloc" "(sz:bv 64).arg0:eq(llvmword(8*sz)) -o arg0:true, ret:array(0,<sz,*1,[(W,0) |-> true])" "mallocSpec";

heapster_typecheck_fun env "sorted_insert" "(x:bv 64).arg0:eq(llvmword(x)), arg1:List<(exists y:(bv 64).eq(llvmword(y))),always,W> -o arg0:true, arg1:true, ret:List<(exists y:(bv 64).eq(llvmword(y))),always,W>";

heapster_export_coq env "linked_list.v";
